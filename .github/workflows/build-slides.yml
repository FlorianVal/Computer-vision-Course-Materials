name: Build and Release Slides

on:
  push:
    branches: [ main, master ]
    paths:
      - 'Lesson_*/slides*.tex'
      - 'Lesson_*/generate_illustrations.py'
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # Allow manual trigger

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Find lesson directories
      id: find-lessons
      run: |
        echo "lessons=$(find . -type d -name 'Lesson_*' | sort | xargs echo)" >> $GITHUB_OUTPUT
    
    - name: Generate illustrations for all lessons
      run: |
        lessons="${{ steps.find-lessons.outputs.lessons }}"
        for lesson in $lessons; do
          echo "Generating illustrations for $lesson"
          # Run the illustration generator
          cd "$GITHUB_WORKSPACE"
          python "$lesson/generate_illustrations.py"
        done
    
    - name: Get Current Date
      run: echo "CURRENT_DATE=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
    
    - name: Process LaTeX files
      id: process-tex
      run: |
        mkdir -p build
        lessons="${{ steps.find-lessons.outputs.lessons }}"
        file_list=""
        
        for lesson in $lessons; do
          lesson_name=$(basename "$lesson")
          echo "Processing $lesson_name"
          
          cd "$GITHUB_WORKSPACE/$lesson"
          
          for tex_file in slides*.tex; do
            if [ -f "$tex_file" ]; then
              base_name=$(basename "$tex_file" .tex)
              echo "Found TeX file: $tex_file"
              
              # Add to the compiled list
              echo "${lesson_name}_${base_name}" >> "$GITHUB_WORKSPACE/tex_files.txt"
            fi
          done
        done
        
        cat "$GITHUB_WORKSPACE/tex_files.txt"
    
    - name: Compile LaTeX files
      uses: xu-cheng/latex-action@v3
      with:
        root_file: |
          ${{ join(fromJSON(steps.process-tex.outputs.tex_files), '.tex\n') }}
        work_in_root_file_dir: true
    
    - name: Organize PDFs
      run: |
        mkdir -p build
        lessons="${{ steps.find-lessons.outputs.lessons }}"
        
        for lesson in $lessons; do
          lesson_name=$(basename "$lesson")
          echo "Organizing PDFs for $lesson_name"
          
          cd "$GITHUB_WORKSPACE/$lesson"
          
          for tex_file in slides*.tex; do
            if [ -f "$tex_file" ]; then
              base_name=$(basename "$tex_file" .tex)
              
              # Copy the output PDF to build directory if it exists
              if [ -f "${base_name}.pdf" ]; then
                cp "${base_name}.pdf" "$GITHUB_WORKSPACE/build/${lesson_name}_${base_name}.pdf"
                echo "Copied ${base_name}.pdf to build/${lesson_name}_${base_name}.pdf"
              else
                echo "Warning: ${base_name}.pdf not found"
              fi
            fi
          done
        done
    
    - name: Upload PDFs as artifacts
      uses: actions/upload-artifact@v4
      with:
        name: slides-pdfs
        path: build/*.pdf
    
    - name: Create Release
      id: create_release
      if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
      uses: softprops/action-gh-release@v1
      with:
        name: Slides Release ${{ env.CURRENT_DATE }}
        tag_name: release-${{ env.CURRENT_DATE }}
        files: build/*.pdf
        body: "Computer Vision Course Slides released on ${{ env.CURRENT_DATE }}"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 